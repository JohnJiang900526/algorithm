(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{216:function(t,s,v){"use strict";v.r(s);var _=v(0),n=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"树的相关术语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#树的相关术语"}},[t._v("#")]),t._v(" 树的相关术语")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("相关术语")]),t._v(" "),v("p",[t._v("一个树结构包含一系列存在父子关系的节点。每一个节点都有一个父节点(除了顶部节点)\n以及零个或者多个子节点。")]),t._v(" "),v("p",[t._v("位于顶部的节点叫做"),v("strong",[t._v("根节点")]),t._v("，它没有父节点。树中的每一个元素都叫做节点。")]),t._v(" "),v("p",[t._v("节点分为"),v("strong",[t._v("内部节点")]),t._v("和"),v("strong",[t._v("外部节点")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("内部节点")]),t._v("： 至少有一个子节点的节点叫做内部节点。")]),t._v(" "),v("p",[v("strong",[t._v("外部节点")]),t._v("： 没有子元素的节点叫做外部节点或者叶节点。")]),t._v(" "),v("p",[t._v("节点的一个属性是"),v("strong",[t._v("深度")]),t._v("，节点深度取决于它祖先节点的个数。")]),t._v(" "),v("p",[v("strong",[t._v("树的高度")]),t._v("取决于所有节点的最大值。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);