(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{214:function(a,t,r){"use strict";r.r(t);var v=r(0),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"图的表示"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图的表示"}},[a._v("#")]),a._v(" 图的表示")]),a._v(" "),r("p",[a._v("从数据结构上来讲，可以用很多方式来表示图。在所有的表示方法中不存在绝对正确的方式。")]),a._v(" "),r("p",[a._v("图的正确方式取决于待解决的问题和图的类型。")]),a._v(" "),r("h2",{attrs:{id:"邻接矩阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#邻接矩阵"}},[a._v("#")]),a._v(" 邻接矩阵")]),a._v(" "),r("p",[a._v("图最常见的实现是邻接矩阵。每一个节点都和一个整数关联，该整数将作为数组的索引。")]),a._v(" "),r("p",[a._v("用一个二维数组来表示顶点间的连接。如果索引为i的节点和索引为j的节点相邻，则array[i][j] = 1")]),a._v(" "),r("p",[a._v("否则 array[i][j] = 0。")]),a._v(" "),r("p",[a._v("不是强连通的图(稀疏图)，如果用邻接矩阵来表示，则矩阵中将会有很多0，这意味着浪费计算机存储空间")]),a._v(" "),r("p",[a._v("来存储根本不存在的边。")]),a._v(" "),r("h2",{attrs:{id:"邻接表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#邻接表"}},[a._v("#")]),a._v(" 邻接表")]),a._v(" "),r("p",[a._v("使用一种叫做邻接表的动态数据来表示图。邻接表由每一个顶点的相邻顶点列表组成。存在好几种方式来表示")]),a._v(" "),r("p",[a._v("这种动态数据结构。我们可以使用列表(数组)，链表，甚至是散列表或者字典来表示相邻顶点列表。")]),a._v(" "),r("h2",{attrs:{id:"关联矩阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关联矩阵"}},[a._v("#")]),a._v(" 关联矩阵")]),a._v(" "),r("p",[a._v("可以使用关联矩阵来表示图，在关联矩阵中，矩阵的行表示顶点，列表示边。我们使用二维数组来表示两者的")]),a._v(" "),r("p",[a._v("连通性，如果顶点v是边e的入射点，则array[v][e] = 1, 否则，array[v][e] = 0。")]),a._v(" "),r("p",[a._v("关联矩阵通常是用于边的数量要比顶点多的情况下，以节省空间和内存。")])])}),[],!1,null,null,null);t.default=_.exports}}]);