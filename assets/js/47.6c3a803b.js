(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{254:function(t,v,_){"use strict";_.r(v);var s=_(0),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"图的相关术语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#图的相关术语"}},[t._v("#")]),t._v(" 图的相关术语")]),t._v(" "),_("p",[t._v("图是网络结构的抽象模型。图是由一组边连线的节点。可以用任何二元关系来表示图。")]),t._v(" "),_("p",[t._v("一个图G = (V, E) 由以下元素组成。")]),t._v(" "),_("p",[t._v("V: 一组定点")]),t._v(" "),_("p",[t._v("E: 一组边，连接V中的定点")]),t._v(" "),_("p",[t._v("由一条边连接在一起的顶点称为相邻顶点。")]),t._v(" "),_("p",[t._v("一个顶点的度是其相邻的顶点的数据量。")]),t._v(" "),_("p",[t._v("路径是顶点v1, v2, v3, ... 的一个连续序列。")]),t._v(" "),_("p",[t._v("简单的路径要求不包括重复的顶点。")]),t._v(" "),_("p",[t._v("如果图不存现在环，称为无循环图。")]),t._v(" "),_("h2",{attrs:{id:"有向图和无向图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#有向图和无向图"}},[t._v("#")]),t._v(" 有向图和无向图")]),t._v(" "),_("p",[t._v("图可以是有向的也可以是无向的。")]),t._v(" "),_("p",[t._v("如果图中每两个顶点间在双向上都存在路径，则该图称为强连通的。")]),t._v(" "),_("p",[t._v("图可以是未加权的或者是加权的。加权的边被赋予了权值。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),_("p",[t._v("使用图可以解决计算机科学世界中的很多问题，比如搜索图中的特定顶点或者\n搜索一条特定的边，寻找一条特殊的路径，寻找两个顶点之间的最短的路径。")])])])}),[],!1,null,null,null);v.default=a.exports}}]);